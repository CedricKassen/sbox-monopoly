@using System.Diagnostics
@using Sandbox;
@using Sandbox.Events
@using Sandbox.Events.GameStateEvents
@using Sandbox.UI;
@inherits PanelComponent



<root class="@(Visible ? "" : "hide")">
	<div class="title">@MyStringValue</div>
	<button onclick=@PressWin>Win</button>
    	<button  onclick=@PressEnd>End Game</button>
	<p>Press Esc to Win and Jump to Leave</p>
</root>
@code
{

	[Property, TextArea] public string MyStringValue { get; set; } = "Hello World!";
	[Property] public bool Visible { get; set; } = false;
	[Property] UiManager UiManager { get; set; }

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		return System.HashCode.Combine(Visible);
	}

	protected override void OnUpdate()
	{
		base.OnUpdate();
		if (Input.EscapePressed)
		{
			PressWin();
		} else if (Input.Down("jump"))
		{
			PressEnd();
		}
	}
	
	void PressWin()
	{
		UiManager.ChangeState(GameState.END_GAME);
	}
	
	void PressEnd()
	{
		UiManager.ChangeState(GameState.MENU);
	}


}
