@using System.Diagnostics
@using Sandbox;
@using Sandbox.Events
@using Sandbox.Events.GameStateEvents
@using Sandbox.Network
@using Sandbox.UI;
@namespace Sandbox.UI
@inherits PanelComponent



<root class="@(Visible ? "" : "hide")">
	<div class="title">@MyStringValue</div>
	<button onclick=@PressStart>Start</button>
	<button onclick=@PressBack>Zur√ºck</button>
	
	<p class="text">@Lobby.playerNum/@Lobby.maxPlayers</p>
	
	<div class="player-container">
			@foreach (var player in Lobby.getCurrentPlayers())
        	{
		        <p>@player.Name</p>
        		<img src=@($"avatar:{player.SteamId}")/>
	        }
	</div>

</root>

@code
{
	[Property, TextArea] public string MyStringValue { get; set; } = "Hello World!";
	[Property] public bool Visible { get; set; } = false;
	[Property] UiManager UiManager { get; set; }
	[Property] Lobby Lobby { get; set; }

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		return System.HashCode.Combine(Visible, Lobby);
	}
	
	void PressStart()
	{
		UiManager.ChangeState(GameState.INGAME);
	}
	

	void PressBack()
	{
		if (GameNetworkSystem.IsActive || Networking.IsHost)
		{
			GameNetworkSystem.Disconnect();
		}
		UiManager.ChangeState(GameState.MENU);
	}
	
	
}
