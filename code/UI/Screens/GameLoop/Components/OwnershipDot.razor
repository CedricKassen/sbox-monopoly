@using System
@namespace Monopoly.UI.Screens.GameLoop
@inherits Sandbox.UI.Panel

<root>
	<div onclick=@(() => OnSelect(FieldName))
	     id=@FieldName
	     class="ownership-dot @ColorClass @(GetSelected(FieldName) ? "ownership-dot-selected" : "")"
	     onmouseover=@(() => SetCurrentHoverLocation(FieldName))
	     onmouseout=@(() => _player.CurrentHoverLocation = null)>
		<div id="@(FieldName)-mortgaged" class="@(GetMortgaged(FieldName) ? "ownership-dot-mortgage" : "")"></div>
		<div id="@(FieldName)-disabled" class=" @(GetOwned(FieldName) ? "" : "ownership-dot-disabled")"></div>
	</div>
</root>

@code {

	private Player _player = Game.ActiveScene.GetAllComponents<Player>().First(p => p.SteamId == (ulong)Game.SteamId);
	private GameObject _locationContainer = Game.ActiveScene.Children[0];

	[Property]
	public string FieldName { get; set; }

	[Property]
	public Action<string> OnSelect { get; set; } = (string _) => { };

	[Property]
	public string ColorClass { get; set; }

	[Property]
	public Func<string, bool> GetSelected { get; set; } = (string _) => { return false; };

	[Property]
	public Func<string, bool> GetMortgaged { get; set; } = (string _) => { return false; };

	[Property]
	public Func<string, bool> GetOwned { get; set; } = (string _) => { return false; };

	[Property]
	public int DataHash { get; set; }

	protected override int BuildHash() {
		return HashCode.Combine(FieldName, DataHash);
	}

	private void SetCurrentHoverLocation(string FieldName) {
		if (FieldName.Contains("Jail")) {
			Log.Warning("JailFree Cards are currently not supported by hover UI");
			return;
		}

		var locationGameObject = _locationContainer.Children.First(o => o.Name == FieldName);
		var location = locationGameObject.Components.Get<GameLocation>();

		_player.CurrentHoverLocation = location;
	}

}
