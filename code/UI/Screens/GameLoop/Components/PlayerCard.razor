@using System
@inherits Sandbox.UI.Panel
@namespace Monopoly.UI.Screens.GameLoop


<root>
<div>
	<img src=@($"avatar:{SteamId}") alt="profile-picture"/>
	<div style="display: flex; flex-direction: column; gap: 4px">
		<p style="font-weight: bolder"> @Player.Name </p>
		<p style="font-weight: lighter"> @Player.Money$ </p>
	</div>
</div>
<div style="display: flex; flex-direction: row; width: 100%; margin-top: 20px; gap: 5px">
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="brown1"
			ColorClass="brown"
			Mortgaged=@GetMortagedStatus("brown1")
			Owned=@(Owned["brown1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="brown2"
			ColorClass="brown"
			Mortgaged=@GetMortagedStatus("brown2")
			Owned=@(Owned["brown2"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="lightBlue1"
			ColorClass="lightBlue"
			Mortgaged=@GetMortagedStatus("lightBlue1")
			Owned=@(Owned["lightBlue1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="lightBlue2"
			ColorClass="lightBlue"
			Mortgaged=@GetMortagedStatus("lightBlue2")
			Owned=@(Owned["lightBlue2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="lightBlue3"
			ColorClass="lightBlue"
			Mortgaged=@GetMortagedStatus("lightBlue3")
			Owned=@(Owned["lightBlue3"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="pink1"
			ColorClass="pink"
			Mortgaged=@GetMortagedStatus("pink1")
			Owned=@(Owned["pink1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="pink2"
			ColorClass="pink"
			Mortgaged=@GetMortagedStatus("pink2")
			Owned=@(Owned["pink2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="pink3"
			ColorClass="pink"
			Mortgaged=@GetMortagedStatus("pink3")
			Owned=@(Owned["pink3"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="orange1"
			ColorClass="orange"
			Mortgaged=@GetMortagedStatus("orange1")
			Owned=@(Owned["orange1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="orange2"
			ColorClass="orange"
			Mortgaged=@GetMortagedStatus("orange2")
			Owned=@(Owned["orange2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="orange3"
			ColorClass="orange"
			Mortgaged=@GetMortagedStatus("orange3")
			Owned=@(Owned["orange3"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="red1"
			ColorClass="red"
			Mortgaged=@GetMortagedStatus("red1")
			Owned=@(Owned["red1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="red2"
			ColorClass="red"
			Mortgaged=@GetMortagedStatus("red2")
			Owned=@(Owned["red2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="red3"
			ColorClass="red"
			Mortgaged=@GetMortagedStatus("red3")
			Owned=@(Owned["red3"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="yellow1"
			ColorClass="yellow"
			Mortgaged=@GetMortagedStatus("yellow1")
			Owned=@(Owned["yellow1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="yellow2"
			ColorClass="yellow"
			Mortgaged=@GetMortagedStatus("yellow2")
			Owned=@(Owned["yellow2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="yellow3"
			ColorClass="yellow"
			Mortgaged=@GetMortagedStatus("yellow3")
			Owned=@(Owned["yellow3"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="green1"
			ColorClass="green"
			Mortgaged=@GetMortagedStatus("green1")
			Owned=@(Owned["green1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="green2"
			ColorClass="green"
			Mortgaged=@GetMortagedStatus("green2")
			Owned=@(Owned["green2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="green3"
			ColorClass="green"
			Mortgaged=@GetMortagedStatus("green3")
			Owned=@(Owned["green3"] == SteamId)>
		</OwnershipDot>
	</div>
	<div class="ownership-dot-column">
		<OwnershipDot
			FieldName="blue1"
			ColorClass="blue"
			Mortgaged=@GetMortagedStatus("blue1")
			Owned=@(Owned["blue1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="blue2"
			ColorClass="blue"
			Mortgaged=@GetMortagedStatus("blue2")
			Owned=@(Owned["blue2"] == SteamId)>
		</OwnershipDot>
	</div>
</div>
<div>
	<div style="display: flex; flex-direction: row; gap: 5px">
		<OwnershipDot
			FieldName="railroad1"
			ColorClass="black"
			Mortgaged=@GetMortagedStatus("railroad1")
			Owned=@(Owned["railroad1"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="railroad2"
			ColorClass="black"
			Mortgaged=@GetMortagedStatus("railroad2")
			Owned=@(Owned["railroad2"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="railroad3"
			ColorClass="black"
			Mortgaged=@GetMortagedStatus("railroad3")
			Owned=@(Owned["railroad3"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="railroad4"
			ColorClass="black"
			Mortgaged=@GetMortagedStatus("railroad4")
			Owned=@(Owned["railroad4"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="electricCompany"
			ColorClass="gray"
			Mortgaged=@GetMortagedStatus("electricCompany")
			Owned=@(Owned["electricCompany"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="waterCompany"
			ColorClass="gray"
			Mortgaged=@GetMortagedStatus("waterCompany")
			Owned=@(Owned["waterCompany"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="chanceJailFree"
			ColorClass="policeBlue"
			Owned=@(Owned["chanceJailFree"] == SteamId)>
		</OwnershipDot>
		<OwnershipDot
			FieldName="communityJailFree"
			ColorClass="policeBlue"
			Owned=@(Owned["communityJailFree"] == SteamId)>
		</OwnershipDot>

	</div>
</div>
</root>

@code {

	[Property]
	public Player Player { get; set; }

	public ulong SteamId => Player.SteamId;

	[Property]
	public NetDictionary<string, ulong> Owned { get; set; }

	private bool GetMortagedStatus(string propertyName) {
		var property = Game.ActiveScene.GetAllObjects(true).First(o => o.Name == propertyName).Components.Get<GameLocation>();
		return property.Mortgaged;
	}

	/// <summary>
	///     the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() {
		return HashCode.Combine(Player.Money);
	}

}
