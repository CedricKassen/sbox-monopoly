@using System.Diagnostics
@using Sandbox;
@using Sandbox.Events
@using Sandbox.Events.GameStateEvents
@using Sandbox.Network
@using Sandbox.UI;
@namespace Sandbox.UI
@inherits PanelComponent




<root class="@(Visible ? "" : "hide") menu">
	<h1 class="title"> MY_POOL_NO </h1>
	<button onclick=@PressCreate>Erstellen</button>

	<div class="hub-buttons">
		<button class="back icon" onclick=@PressBack>
			keyboard_return
		</button>
	</div>

	<div></div>
</root>

@code
{
	[Property] public bool Visible { get; set; } = false;
	[Property] UiManager UiManager { get; set; }

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		return System.HashCode.Combine(Visible);
	}
	
	void PressCreate()
	{
		Log.Info(Networking.IsHost);
		Log.Info(GameNetworkSystem.IsConnecting);
		Log.Info(GameNetworkSystem.IsActive);
		
		if (Networking.IsHost || GameNetworkSystem.IsActive && GameNetworkSystem.IsClient)
		{
			GameNetworkSystem.Disconnect();
			
		}
			GameNetworkSystem.CreateLobby();
			UiManager.ChangeState(GameState.INLOBBY);
	}
	
	void PressBack()
	{
		if (GameNetworkSystem.IsActive)
		{
			GameNetworkSystem.Disconnect();
		}
		UiManager.ChangeState(GameState.MENU);
	}
	
}
